@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Find dependencies
find_dependency(Threads)

# Check if components are available
set(_renoir_supported_components cpp rust)

foreach(_comp ${Renoir_FIND_COMPONENTS})
    if(NOT _comp IN_LIST _renoir_supported_components)
        set(Renoir_FOUND FALSE)
        set(Renoir_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
    endif()
endforeach()

# Include targets
include("${CMAKE_CURRENT_LIST_DIR}/RenoirTargets.cmake")

# Set found variables for components
if(TARGET renoir::cpp)
    set(Renoir_cpp_FOUND TRUE)
endif()

# For backwards compatibility
set(RENOIR_FOUND ${Renoir_FOUND})
set(RENOIR_LIBRARIES renoir::cpp)
set(RENOIR_INCLUDE_DIRS "${PACKAGE_PREFIX_DIR}/include")

check_required_components(Renoir)